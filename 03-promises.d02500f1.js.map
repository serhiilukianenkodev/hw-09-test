{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEeC,SAASC,cAAc,SAE/BC,iBAAiB,UAExB,SAAsBC,G,kBAOlB,IAAMC,EAAeC,EAAQC,EAAOC,EACpCC,YAAW,WAgBf,IAAuBC,EAAUC,EACzBC,GADeF,EAfHF,EAAI,EAeSG,EAfNN,EAgBnBO,EAAgBC,KAAKC,SAAW,GAC/B,IAAIC,SAAQ,SAACC,EAASC,GACvBL,EACFI,EAAQ,CAAEN,WAAUC,UAEpBM,EAAO,CAAEP,WAAUC,S,KApBhBO,MAAK,SAAAC,G,IAAGT,EAAQS,EAART,SAAUC,EAAKQ,EAALR,MACjBZ,EAAAqB,OAAOC,QAAQ,uBAAwCC,OAAfZ,EAAS,QAAYY,OAANX,EAAM,M,IAE9DY,OAAM,SAAAJ,G,IAAGT,EAAQS,EAART,SAAUC,EAAKQ,EAALR,MAClBZ,EAAAqB,OAAOI,QAAQ,sBAAqCF,OAAfZ,EAAS,QAAYY,OAANX,EAAM,M,MAE7DN,E,EAfLD,EAAIqB,iBAKJ,IAJA,IAAMnB,EAAQoB,OAAOtB,EAAIuB,cAAcC,SAASjB,MAAMkB,OAChDtB,EAAOmB,OAAOtB,EAAIuB,cAAcC,SAASrB,KAAKsB,OAC9CC,EAASJ,OAAOtB,EAAIuB,cAAcC,SAASE,OAAOD,OAE/CE,EAAI,EAAGA,EAAID,EAAQC,GAAK,EAACC,EAAAD,GAalCtB,YAAW,WACTL,EAAI6B,OAAOC,O,GACV5B,EAAQC,EAAOuB,E","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst formEl = document.querySelector('.form');\n\nformEl.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(evt) {\n  evt.preventDefault();\n  const delay = Number(evt.currentTarget.elements.delay.value);\n  const step = Number(evt.currentTarget.elements.step.value);\n  const amount = Number(evt.currentTarget.elements.amount.value);\n\n  for (let i = 0; i < amount; i += 1) {\n    const currentDelay = delay + step * i;\n    setTimeout(() => {\n      createPromise(i + 1, currentDelay)\n        .then(({ position, delay }) => {\n          Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        })\n        .catch(({ position, delay }) => {\n          Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n        });\n    }, currentDelay);\n  }\n\n  setTimeout(() => {\n    evt.target.reset();\n  }, delay + step * amount);\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    if (shouldResolve) {\n      resolve({ position, delay });\n    } else {\n      reject({ position, delay });\n    }\n  });\n}\n"],"names":["$h6c0i","parcelRequire","document","querySelector","addEventListener","evt","currentDelay","delay1","step","i","setTimeout","position","delay","shouldResolve","Math","random","Promise","resolve","reject","then","param","Notify","success","concat","catch","failure","preventDefault","Number","currentTarget","elements","value","amount","i1","_loop","target","reset"],"version":3,"file":"03-promises.d02500f1.js.map"}